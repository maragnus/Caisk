@using Caisk.Objects

<form @onsubmit="@FormSubmit">
    <MudDialog DefaultFocus="DefaultFocus.FirstChild">
        <DialogContent>
            <MudTextField T="string" @bind-Text="@_name" Label="Profile Name" Validation="@((object)ValidateName)" Immediate Variant="Variant.Outlined"/>
            <MudAlert Severity="Severity.Info" Class="my-4">@ObjectProfileUtility.NameConstraint</MudAlert>
            <MudDivider/>
        </DialogContent>
        <DialogActions>
            <MudButton Color="Color.Primary" Variant="Variant.Filled" ButtonType="ButtonType.Submit" OnClick="@Confirm" Disabled="!_isValid">Create</MudButton>
            <MudButton Color="Color.Error" OnClick="@Cancel">Cancel</MudButton>
        </DialogActions>
    </MudDialog>
</form>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = default!;

    [Parameter] public string[] Names { get; set; } = default!;
    
    private string? _name;
    private bool _isValid;

    private void Confirm()
    {
        if (ValidateName(_name) is null)
            MudDialog.Close(DialogResult.Ok(_name));
    }

    private void Cancel() => MudDialog.Close(DialogResult.Cancel());

    public string? ValidateName(string? name)
    {
        _isValid = false;
        if (string.IsNullOrWhiteSpace(name))
            return "Name is required";

        if (!ObjectProfileUtility.IsNameValid(name))
            return "Name format is incorrect";

        if (Names.Contains(name))
            return "Name already exists";

        _isValid = true;
        return null;
    }

    private void FormSubmit()
    {
        Confirm();
    }

}