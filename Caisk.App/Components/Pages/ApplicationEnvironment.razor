@page "/apps/{ParentName}/{Name}"
@using Caisk.Applications
@using Caisk.Managers.Mongo
@using Caisk.SecureShells
@inherits BaseProfileEditor<ApplicationEnvironmentProfile, IApplicationEnvironmentStore>

@rendermode InteractiveServer

<MyMudProviders/>
<PageTitle>Application: @ParentName/@Name (Caisk)</PageTitle>
<NavigationLock OnBeforeInternalNavigation="OnBeforeInternalNavigation" ConfirmExternalNavigation="IsTouched"/>

<MudContainer MaxWidth="MaxWidth.Medium">
    <MudText Typo="Typo.h4" GutterBottom="true">Application Environment</MudText>
    <MudText Class="mb-8">Configure, update, deploy application environment</MudText>

    <MudPaper Class="pa-4">
        @if (IsLoading)
        {
            <MudProgressCircular Color="Color.Default" Indeterminate="true"/>
        }
        else
        {
            <MudForm Model="Profile" @bind-IsValid="IsValid" @bind-IsTouched="IsTouched">
                <MudStack Spacing="4">
                    <MudTextField Label="Name" ReadOnly Value="Profile.Name"/>
                    <MudTextField Label="Application" ReadOnly Value="Profile.ParentName"/>
                    <ProfileSelector T="MongoDatabaseProfile" Label="Mongo Database" @bind-Value="Profile.MongoDatabaseName" Icon="@Icons.Material.Filled.BackupTable"/>
                    <ProfileSelector T="SecureShellProfile" Label="Secure Shell" @bind-Value="Profile.SecureShellName" Icon="@Icons.Material.Filled.Terminal"/>
                    <MudStack Row AlignItems="AlignItems.Center" Justify="Justify.FlexEnd" Spacing="4">
                        <MudButton OnClick="@EditDockerCompose" Color="Color.Info" StartIcon="@Icons.Material.Filled.Edit">Docker Compose</MudButton>
                        <MudDivider Vertical DividerType="DividerType.Middle" FlexItem/>
                        @if (!IsNew)
                        {
                            <MudButton StartIcon="@Icons.Material.Filled.Delete" OnClick="@Delete" Color="Color.Error">Delete</MudButton>
                            <MudButton StartIcon="@Icons.Material.Filled.Edit" OnClick="@Rename" Color="Color.Warning">Rename</MudButton>
                            <MudDivider Vertical DividerType="DividerType.Middle" FlexItem/>
                        }
                        <MudButton OnClick="@Cancel" Color="Color.Default">Cancel</MudButton>
                        <MudButton StartIcon="@Icons.Material.Filled.Save" OnClick="@SaveAndClose" Color="Color.Primary" Variant="Variant.Filled" Disabled="!IsValid">Store</MudButton>
                    </MudStack>
                </MudStack>
            </MudForm>
        }
    </MudPaper>
</MudContainer>

@code {

    private async Task EditDockerCompose()
    {
        await Save();
        NavigationManager.NavigateTo(Common.ProfileUrl<ApplicationEnvironmentProfile>(Profile.Name, Profile.ParentName) + "/docker-compose");
    }

}