@page "/users/{Name}"
@using Caisk.Users
@inherits BaseProfileEditor<Caisk.Users.UserProfile, Caisk.Users.IUserStore>

@rendermode InteractiveServer

<MyMudProviders/>
<PageTitle>User: @Name (Caisk)</PageTitle>
<NavigationLock OnBeforeInternalNavigation="OnBeforeInternalNavigation" ConfirmExternalNavigation="IsTouched"/>

<MudContainer MaxWidth="MaxWidth.Small" Class="mt-4">
    <MudText Typo="Typo.h4" GutterBottom="true">User</MudText>
    <MudText Class="mb-8">Edit user account</MudText>

    <MudPaper Class="pa-4">
        @if (IsLoading)
        {
            <MudProgressCircular Color="Color.Default" Indeterminate="true"/>
        }
        else
        {
            <MudForm Model="Profile" @bind-IsValid="IsValid" @bind-IsTouched="IsTouched">
                <MudStack Spacing="4">
                    <MudTextField Label="Name" ReadOnly Value="Profile.Name" InputMode="InputMode.text" InputType="InputType.Text"/>
                    <MudTextField Label="Email" @bind-Value="Profile.Email" InputMode="InputMode.email" InputType="InputType.Email"/>
                    <MudCheckBox T="bool" Label="Is Verified" ReadOnly Value="Profile.IsVerified"/>

                    <MudStack Row Justify="Justify.SpaceBetween">
                        <MudButton StartIcon="@Icons.Material.Filled.QrCode" OnClick="@UpdateTotp" Color="Color.Primary" Variant="Variant.Filled">Create 2FA</MudButton>
                        <MudButton StartIcon="@Icons.Material.Filled.Password" OnClick="@UpdatePassword" Color="Color.Primary" Variant="Variant.Filled">Change Password</MudButton>
                    </MudStack>

                    <MudStack Row AlignItems="AlignItems.Center" Justify="Justify.FlexEnd" Spacing="4">
                        @if (!IsNew)
                        {
                            <MudButton StartIcon="@Icons.Material.Filled.Delete" OnClick="@Delete" Color="Color.Error">Delete</MudButton>
                            <MudButton StartIcon="@Icons.Material.Filled.Edit" OnClick="@Rename" Color="Color.Warning">Rename</MudButton>
                            <MudDivider Vertical DividerType="DividerType.Middle" FlexItem/>
                        }
                        <MudButton OnClick="@Cancel" Color="Color.Default">Cancel</MudButton>
                        <MudButton StartIcon="@Icons.Material.Filled.Save" OnClick="@SaveAndClose" Color="Color.Primary" Variant="Variant.Filled" Disabled="!IsValid">Store</MudButton>
                    </MudStack>
                </MudStack>
            </MudForm>
        }
    </MudPaper>
</MudContainer>

@code {

    private async Task UpdateTotp(MouseEventArgs arg)
    {
        await Save();

        var parameters = new DialogParameters
        {
            { nameof(NewProfileModal.Name), Profile.Name },
        };
        var modal = await DialogService.ShowAsync<NewTotpModal>("Setup 2FA for " + ProfileStore.Name, parameters);
        var result = await modal.Result;
        if (result.Canceled) return;
        await Refresh();
    }

    protected override Task StoreProfile(UserProfile save)
    {
        save.Email = Profile.Email;
        return Task.CompletedTask;
    }

    private async Task UpdatePassword()
    {
        await Save();

        var parameters = new DialogParameters
        {
            { nameof(NewProfileModal.Name), Profile.Name },
        };
        var modal = await DialogService.ShowAsync<NewPasswordModal>("Change Password for " + ProfileStore.Name, parameters);
        var result = await modal.Result;
        if (result.Canceled) return;
        await Refresh();
    }

}