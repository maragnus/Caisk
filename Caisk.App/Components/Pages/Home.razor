@page "/"
@using Caisk.Applications
@using Caisk.Deploy
@using Caisk.Docker
@using Caisk.GitHub
@using Caisk.Managers.Mongo
@using Caisk.SecureShells
@inherits BasePage

@rendermode InteractiveServer

<PageTitle>Dashboard</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
    @foreach (var (app, envs) in _apps)
    {
        <MudButton Size="Size.Large" StartIcon="@Common.ApplicationProfileIcon" Href="@(Common.ProfileUrl<ApplicationProfile>(app.Name))">@app.Name</MudButton>
        <MudGrid Spacing="4" Class="mt-2">
            @foreach (var env in envs)
            {
                <MudItem xs="12" sm="6" md="4" lg="3" xl="2">
                    <MudCard>
                        <MudCardContent>
                            <MudStack Spacing="4" AlignItems="AlignItems.Stretch">
                                <MudStack Row AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween">
                                    <MudButton Size="Size.Medium" StartIcon="@Common.ApplicationEnvironmentProfileIcon" Href="@(Common.ProfileUrl<ApplicationEnvironmentProfile>(env.Name, env.ParentName))">@env.ParentName @env.Name</MudButton>
                                    <MudIconButton Color="Color.Tertiary" Icon="@Icons.Material.Filled.RocketLaunch" OnClick="@(() => Deploy(env))">Deploy</MudIconButton>
                                </MudStack>
                                <MudDivider DividerType="DividerType.Middle" FlexItem/>
                                <MudStack AlignItems="AlignItems.Start">
                                    @foreach (var url in env.EntryUrl?.Split(";") ?? Array.Empty<string>())
                                    {
                                        <MudLink Href="@url" Target="_blank">
                                            <MudIcon Icon="@Icons.Material.Filled.Link" Style="font-size: inherit"/> @url
                                        </MudLink>
                                    }
                                </MudStack>
                                <MudChipSet>
                                    @foreach (var image in env.Services)
                                    {
                                        <MudChip Icon="@Icons.Material.Filled.LocalShipping">@image.Image</MudChip>
                                    }
                                    <ProfileChip T="RegistryProfile" Name="@app.RegistryName"/>
                                    <ProfileChip T="GitHubRepositoryProfile" Name="@app.GitHubRepositoryName"/>
                                    <ProfileChip T="MongoDatabaseProfile" Name="@env.MongoDatabaseName"/>
                                    <ProfileChip T="SecureShellProfile" Name="@env.SecureShellName"/>
                                </MudChipSet>
                            </MudStack>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            }
        </MudGrid>
    }
</MudContainer>

@code {
    private ApplicationEnvironments[] _apps = Array.Empty<ApplicationEnvironments>();

    [Inject] IApplicationStore ApplicationStore { get; set; } = default!;
    [Inject] DeploymentManager DeploymentManager { get; set; } = default!;

    protected override async Task OnSafeInitializedAsync()
    {
        await base.OnSafeInitializedAsync();
        _apps = await ApplicationStore.GetAllEnvironments();
    }

    void Deploy(ApplicationEnvironmentProfile env) =>
        NavigationManager.NavigateTo(Common.ProfileUrl<ApplicationEnvironmentProfile>(env.Name, env.ParentName) + "/deploy");

    void GoToApp(ApplicationEnvironmentProfile env) =>
        NavigationManager.NavigateToProfile<ApplicationEnvironmentProfile>(env.Name, env.ParentName);

}