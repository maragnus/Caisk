@page "/mongo"
@using Caisk.Managers.Mongo
@inherits BasePage
@rendermode InteractiveServer

<MyMudProviders/>

<PageTitle>Mongo Databases (Caisk)</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
    <MudText Typo="Typo.h4" GutterBottom="true">Mongo Databases</MudText>
    <MudText Class="mb-8">Manage mongo servers, databases, and credentials</MudText>

    @if (IsLoading)
    {
        <MudProgressCircular Color="Color.Default" Indeterminate="true"/>
    }
    else
    {
        <MudTable T="MongoDatabaseProfile" Items="_profiles" SortLabel="Sort By" Hover OnRowClick="@OpenProfile" Breakpoint="Breakpoint.Sm">
            <HeaderContent>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<MongoDatabaseProfile, object>(x => x.Name)">Name</MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<MongoDatabaseProfile, object>(x => x.HostName!)">Host Name</MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<MongoDatabaseProfile, object>(x => x.UserName!)">User Name</MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<MongoDatabaseProfile, object>(x => x.Database!)">Database</MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<MongoDatabaseProfile, object>(x => x.Created)">Added</MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<MongoDatabaseProfile, object>(x => x.Updated)">Updated</MudTableSortLabel>
                </MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Host Name">@context.HostName</MudTd>
                <MudTd DataLabel="User Name">@context.UserName</MudTd>
                <MudTd DataLabel="Database">@context.Database</MudTd>
                <MudTd DataLabel="Added">@Common.Date(context.Created)</MudTd>
                <MudTd DataLabel="Updated">@Common.Date(context.Updated)</MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager PageSizeOptions="new[] { 50, 100 }"/>
            </PagerContent>
        </MudTable>
        <MudButton StartIcon="@Icons.Material.Filled.Add" OnClick="@AddClick" Color="Color.Primary">Add Mongo Server</MudButton>
    }
</MudContainer>

@code {
    private MongoDatabaseProfile[] _profiles = Array.Empty<MongoDatabaseProfile>();

    [Inject] public IMongoDatabaseStore ProfileStore { get; set; } = default!;

    protected override async Task OnSafeInitializedAsync() =>
        _profiles = await ProfileStore.GetAll();

    private async Task AddClick()
    {
        var names = _profiles.Select(p => p.Name).ToArray();
        var parameters = new DialogParameters { { nameof(NewProfileModal.Names), names } };
        var modal = await DialogService.ShowAsync<NewProfileModal>("Add Mongo Server", parameters);
        var result = await modal.Result;
        if (result.Canceled) return;
        NavigationManager.NavigateToProfile<MongoDatabaseProfile>((string)result.Data);
    }

    private void OpenProfile(TableRowClickEventArgs<MongoDatabaseProfile> row) =>
        NavigationManager.NavigateToProfile<MongoDatabaseProfile>(row.Item.Name);

}